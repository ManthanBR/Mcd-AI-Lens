/* START OF FILE index.v3.css */

body, html { /* Apply to html as well for full coverage */
  margin: 0;
  padding: 0;
  width: 100%; /* Ensure body and html take full width */
  height: 100%; /* Ensure body and html take full height */
  overflow: hidden;
  background-color: #000; /* Black background for letter/pillar-boxing */
}

#canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;  /* Canvas element visually fills viewport width */
  height: 100vh; /* Canvas element visually fills viewport height */
  object-fit: contain; /* Scales content (1080x1920) to fit, maintaining aspect ratio, letterboxes if needed */
  z-index: 1; /* Behind UI elements */
  /* For debugging, you can add a border:
  border: 2px solid lime; 
  */
}

.poweredbysnap-logo {
  width: auto; /* Set to auto to avoid stretching */
  position: absolute; /* Position relative to the viewport */
  bottom: 10px; /* Adjusted from -40px to be visible and further from edge */
  left: 10px; /* Adjusted from 40px to be further from edge */
  display: flex;
  align-items: center;
  justify-content: flex-start; /* Align content within the element to the left */
  z-index: 900;
}

.poweredbysnap-logo > img {
  width: 150px; /* Slightly smaller for better fit */
}

#controls {
  position: absolute;
  bottom: 10%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center; /* Vertically align items if #controls has a height */
  z-index: 999;
}

#outline {
  position: absolute;
  /* Centering is handled by its parent #controls if #outline is not absolute,
     or keep transform if it needs to be precisely on top of record-button with offset from parent */
  /* bottom: 10%;  -- Positioned relative to #controls now or directly */
  /* left: 50%; */
  /* transform: translateX(-50%); */
  height: var(--button-size, 100px); /* Adjusted default for mobile, 200px is very large */
  width: var(--button-size, 100px); /* Adjusted default for mobile */
  border: none;
  z-index: 900; /* Below record-button if they overlap perfectly */
  /* transition: background-color 0.2s ease; -- outline doesn't have a background usually */
  /* This element might be better as a child of #controls, not absolutely positioned on its own */
  /* For now, assuming it's meant to be perfectly aligned with record-button: */
  bottom: 0; /* If #controls is the reference for bottom: 10% */
  left: 50%;
  transform: translateX(-50%);
}

#record-button {
  position: relative; /* Changed from absolute to be centered by #controls flex */
  /* bottom: 10%; -- Handled by #controls */
  /* left: 50%; */
  /* transform: translateX(-50%); -- Handled by #controls justify-content: center */
  height: var(--button-size, 100px); /* Adjusted default for mobile */
  width: var(--button-size, 100px); /* Adjusted default for mobile */
  background-image: url("../assets/RecordButton.png"); /* Ensure this path is correct relative to CSS file */
  background-size: contain; /* Use contain to ensure full image is visible */
  background-position: center;
  background-repeat: no-repeat;
  background-color: transparent;
  border-radius: 50%;
  border: none;
  z-index: 1000; /* Above outline */
  transition: background-color 0.2s ease;
  cursor: pointer;
}

/* Styles for record button when recording (JS will add/remove classes or change style directly) */
/* #record-button.pressed { */
  /* background-color: green;  -- This is handled by JS changing background image */
  /* content: "Recording..."; -- Not applicable for background-image button */
/* } */


#action-buttons {
  position: absolute;
  bottom: 20%; /* Adjust the distance from the bottom of the screen */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, 0); /* Offset by half its own width, not height */
  display: flex; /* Enables flex layout */
  justify-content: center; /* Aligns buttons horizontally */
  align-items: center; /* Aligns buttons vertically */
  z-index: 1000; /* Ensure visibility above other elements */
  flex-wrap: wrap; /* Allows wrapping if container width is too small */
  gap: 20px; /* Add some space between buttons */
}

#back-button-container {
  position: absolute;
  top: 20px; /* Consistent unit */
  left: 20px; /* Consistent unit */
  z-index: 1000;
}

#back-button {
  /* transform: none; -- not needed if base state is no transform */
  background-color: transparent;
  height: 60px; /* Adjusted size */
  width: 60px; /* Adjusted size */
  /* color: transparent; -- not needed for image button */
  border: none;
  cursor: pointer;
  user-select: none;
  outline: none;
  padding: 0; /* Explicitly 0 */
  transition: transform 0.15s ease-in-out;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}
#back-button img {
  display: block; /* Remove extra space under image */
  width: 100%; /* Fill button */
  height: 100%; /* Fill button */
  object-fit: contain;
}

#back-button:active {
  transform: scale(0.95); /* Better active state than translate */
}

#share-button,
#download-button { /* Grouped for common styles */
  height: 80px; /* Adjusted size */
  width: 80px; /* Adjusted size */
  background-color: transparent;
  /* transform: translate(-25%, 0); -- Remove individual transforms if using flex gap */
  border: none;
  cursor: pointer;
  user-select: none;
  outline: none;
  padding: 0;
  transition: transform 0.15s ease-in-out;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

#share-button img,
#download-button img {
  display: block; /* Remove extra space under image */
  width: 100%;
  height: 100%;
  object-fit: contain;
}

#share-button:active,
#download-button:active {
  transform: scale(0.95); /* Better active state */
}

/* Individual transforms for share/download if not using gap or if specific offset needed */
/*
#share-button {
  transform: translate(-25%, 0);
}
#share-button:active {
  transform: translate(calc(-25%), 2px) scale(0.95);
}
#download-button {
  transform: translate(25%, 0);
}
#download-button:active {
  transform: translate(calc(25%), 2px) scale(0.95);
}
*/

#switch-cam {
  position: absolute;
  top: 20px; /* Consistent unit */
  right: 20px; /* Consistent unit */
  z-index: 950;
}

#switch-button {
  height: 60px; /* Adjusted size */
  width: 60px; /* Adjusted size */
  background-image: url("../assets/SwitchButton.png"); /* Ensure this path is correct */
  background-size: contain; 
  background-position: center; 
  background-repeat: no-repeat; 
  background-color: transparent;
  border: none;
  user-select: none; 
  outline: none;
  transition: transform 0.2s ease; 
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  cursor: pointer;
}

#switch-button:active {
  transform: scale(0.9); /* Better active state */
}

#loading {
  position: fixed; /* Use fixed to ensure it's viewport relative even if body scrolls (though overflow:hidden should prevent) */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* For true centering */
  z-index: 1001; /* Highest z-index */
  display: none; /* Hidden by default, JS will change to flex or block */
  padding: 20px; /* Add padding around the icon */
  /* background-color: rgba(0, 0, 0, 0.7); /* Optional: dark overlay */
  border-radius: 10px;
  /* For flex centering of the icon within the #loading div (if JS sets display:flex): */
  /* align-items: center; */
  /* justify-content: center; */
}

#loading-icon {
  height: 80px; /* Adjusted size */
  width: 80px; /* Adjusted size */
  animation: spin 1.5s linear infinite; /* Apply the spin animation */
}

/* Keyframes for the rotation */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Desktop-specific styles */
.desktop #outline,
.desktop #record-button {
  height: 70px; /* Keep these if you want different desktop sizes */
  width: 70px;
}

.desktop #share-button, /* Corrected selector */
.desktop #download-button { /* Corrected selector */
  height: 70px;
  width: 70px;
}

.desktop #back-button {
  height: 50px;
  width: 50px;
}

/* Hide switch button on desktop */
.desktop #switch-cam {
  display: none;
}

/* Helper class for buttons if needed */
.button-class {
  /* Common styles for all your <button class="button-class"> elements */
  background-color: transparent;
  border: none;
  padding: 0;
  cursor: pointer;
  user-select: none;
  outline: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  display: flex; /* If they contain an img and you want to center it */
  align-items: center;
  justify-content: center;
}

.button-class img {
  /* If all buttons use img tags */
  display: block;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* --- END OF FILE index.v3.css --- */
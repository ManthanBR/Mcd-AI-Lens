html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; /* Prevent scrollbars on the html element */
}

body {
  margin: 0;
  padding: 0;
  width: 100%; /* Make body fill html width */
  height: 100%; /* Make body fill html height */
  overflow: hidden; /* This was already correctly set */
  background-color: #333; /* Add a general background for the page */
}

#canvas {
  position: absolute;
  /* top, left, width, height will be set by JavaScript to maintain aspect ratio */
  /* Ensure z-index is below controls but above other background elements if any */
  z-index: 1;
  background-color: black; /* Shows as black bars if letterboxed/pillarboxed */
  /* For debugging, you can add a border to see the canvas bounds: */
  /* border: 3px solid red; */
}

.poweredbysnap-logo {
  width: auto;
  position: absolute;
  bottom: 20px; /* Adjusted from -40px to be visible, tune as needed */
  left: 20px;  /* Adjusted */
  display: flex;
  align-items: center;
  justify-content: flex-start;
  z-index: 900;
}

.poweredbysnap-logo > img {
  width: 150px; /* Slightly smaller for better fit on various screens */
}

#controls {
  position: absolute;
  bottom: 5vh; /* Use vh for responsiveness relative to viewport height */
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center; /* Added to help center outline if its size differs */
  z-index: 999;
  /* background-color: rgba(0,0,0,0.1); /* For debugging layout */
}

#outline {
  /* position: absolute; /* It's already absolutely positioned by the rule below */
  height: var(--button-size, 80px); /* Mobile default, can be overridden by .desktop */
  width: var(--button-size, 80px);
  border: none;
  z-index: 900; /* Below record button */
  /* background-image: url("../assets/RecordOutline.png"); /* Set directly in HTML or here */
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  /* Ensure this element is also centered correctly with the record button */
}

/* Combined #outline and #record-button common positioning */
#controls #outline,
#controls #record-button {
  position: absolute;
  /* Centering within #controls (which is full width and bottom-aligned) */
  left: 50%;
  transform: translateX(-50%);
  /* bottom: 0; /* This would put it at the very bottom of #controls container */
}


#record-button {
  height: var(--button-size, 70px); /* Mobile default, slightly smaller than outline for effect */
  width: var(--button-size, 70px);
  background-image: url("../assets/RecordButton.png"); /* Corrected path if assets is sibling to src */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-color: transparent;
  border-radius: 50%;
  border: none;
  z-index: 1000; /* Above outline */
  transition: background-image 0.2s ease, transform 0.1s ease; /* Added transform */
  cursor: pointer;
}

#record-button:active {
  transform: translateX(-50%) scale(0.95); /* Click feedback */
}

/* The .pressed class was in your original CSS, but not used in JS for background. */
/* JS changes background-image directly. If you want a visual cue beyond image swap: */
/*
#record-button.pressed {
  box-shadow: 0 0 10px 5px red;
}
*/

#action-buttons {
  position: absolute;
  bottom: 15vh; /* Adjusted vertical position */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 30px; /* Space between buttons */
  z-index: 1000;
  flex-wrap: nowrap; /* Usually better for a few action buttons */
}

#back-button-container {
  position: absolute;
  top: calc(env(safe-area-inset-top, 0px) + 15px); /* Respect safe area top + margin */
  left: calc(env(safe-area-inset-left, 0px) + 15px); /* Respect safe area left + margin */
  z-index: 1000;
}

.button-class { /* Generic class for consistent button styling */
  background-color: transparent;
  border: none;
  cursor: pointer;
  user-select: none;
  outline: none;
  padding: 0;
  transition: transform 0.15s ease-in-out;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  display: flex; /* To help center image if it's a child */
  align-items: center;
  justify-content: center;
}

.button-class img {
  max-width: 100%;
  max-height: 100%;
  height: auto; /* Changed from auto to a fixed size for consistency or use specific sizes */
  display: block;
}

.button-class:active {
  transform: scale(0.9); /* Generic active state */
}


#back-button {
  /* Extends .button-class */
  width: 50px;  /* Adjust size as needed */
  height: 50px;
}
/* transform: none; is default for .button-class */
/* Overriding active if needed */
#back-button:active {
  transform: scale(0.9);
}


#share-button, #download-button {
  /* Extends .button-class */
  width: 70px; /* Adjust size */
  height: 70px;
  /* transform for positioning within #action-buttons is no longer needed due to flex gap */
}
/* Overriding active if needed */
#share-button:active, #download-button:active {
   transform: scale(0.9);
}


#switch-cam {
  position: absolute;
  top: calc(env(safe-area-inset-top, 0px) + 15px); /* Respect safe area top + margin */
  right: calc(env(safe-area-inset-right, 0px) + 15px); /* Respect safe area right + margin */
  z-index: 950;
}

#switch-button {
  /* Extends .button-class implicitly if you add class="button-class" in HTML */
  /* Or copy common properties */
  background-color: transparent;
  border: none;
  cursor: pointer;
  user-select: none;
  outline: none;
  padding: 0;
  transition: transform 0.15s ease-in-out;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;

  height: 50px; /* Adjust size */
  width: 50px;
  background-image: url("../assets/SwitchButton.png"); /* Corrected path */
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}

#switch-button:active {
  transform: scale(0.9); /* Consistent active state */
}

#loading {
  position: fixed;
  top: 0; /* Cover full screen for overlay effect */
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
  display: none; /* Hidden by default, JS toggles to flex */
  align-items: center;
  justify-content: center;
  z-index: 1001;
}

#loading-icon {
  height: 80px; /* Adjusted size */
  width: 80px;
  animation: spin 1s linear infinite; /* Faster spin */
  display: block;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Desktop-specific styles */
.desktop #outline {
  --button-size: 70px; /* Using CSS variable for outline */
}
.desktop #record-button {
  --button-size: 60px; /* Using CSS variable for record button */
}

.desktop #action-buttons {
    bottom: 10vh; /* Adjust for desktop layout */
    gap: 40px;
}

.desktop #share-button,
.desktop #download-button {
  width: 60px;
  height: 60px;
}

.desktop #back-button,
.desktop #switch-button {
  width: 40px;
  height: 40px;
}

/* Hide switch button on desktop if CameraManager adds .desktop class to body */
.desktop #switch-cam {
  display: none;
}